@model BusinessObjects.WorkManagement.EngineerNonAvailability

@{
    ViewBag.Title = "NonAvailabilityEditor";
}

<h2>Non Availability - Editor</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>EngineerNonAvailability</legend>

        @{ Model.SystemID = ViewBag.UserID; }
        @Html.HiddenFor(model => model.SystemID) <!-- NB: For a property to be set on the bound instance returned from the POST it must be bound to a Hidden or Visible field -->

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EndDate)
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Type)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Type)
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comments)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comments)
            @Html.ValidationMessageFor(model => model.Comments)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

    <div>
        @Html.ActionLink("Back to List", "NonAvailability", new { id = ViewBag.UserID })
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
