@model BusinessObjects.WorkManagement.Customer

@{
    ViewBag.Title = "EditOrCreate";
}

<h2>Customer Details</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Customer</legend>

        <div class="editor-label">
            Name
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Surname)
            @Html.ValidationMessageFor(model => model.Surname)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.TelephoneNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TelephoneNo)
            @Html.ValidationMessageFor(model => model.TelephoneNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MobileNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MobileNo)
            @Html.ValidationMessageFor(model => model.MobileNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EMail)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EMail)
            @Html.ValidationMessageFor(model => model.EMail)
        </div>

        @Html.HiddenFor(model => model.BillingAddress.ID) <!-- NB: For a property to be set on the bound instance returned from the POST it must be bound to a Hidden or Visible field -->
        @Html.HiddenFor(model => model.BillingAddress.PropertyReference) 

        <!-- Using a hidden field the way would use ViewState or Session in ASP.Net to hold on to value of the instance so can work out on POST if edited or not. -->
        <input type="hidden" name="originalModel" value="@Html.Encode(ViewBag.LocationXml)" />
         
        <div>
            <div class="editor-label">
                @Html.LabelFor(model => model.BillingAddress.PostCode)
            </div>
            <div class="editor-field">
             <!-- @Html.EditorFor(model => model.BillingAddress.PostCode) -->
                @Html.TextBoxFor(model => model.BillingAddress.PostCode, new { style = "width:75px" })  <!-- NB MVC framework bug in Html.EditorFor ? Ignoring some htmlAttributes -->
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.BillingAddress.HouseName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.BillingAddress.HouseName)
                @Html.ValidationMessageFor(model => model.BillingAddress.HouseName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.BillingAddress.HouseNo)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.BillingAddress.HouseNo)
                @Html.ValidationMessageFor(model => model.BillingAddress.HouseNo)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.BillingAddress.Street)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.BillingAddress.Street)
                @Html.ValidationMessageFor(model => model.BillingAddress.Street)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.BillingAddress.Town)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.BillingAddress.Town)
                @Html.ValidationMessageFor(model => model.BillingAddress.Town)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.BillingAddress.District)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.BillingAddress.District)
                @Html.ValidationMessageFor(model => model.BillingAddress.District)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.BillingAddress.SubBuilding)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.BillingAddress.SubBuilding)
                @Html.ValidationMessageFor(model => model.BillingAddress.SubBuilding)
            </div>
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
